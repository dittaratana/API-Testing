{
  "stats": {
    "suites": 5,
    "tests": 9,
    "passes": 9,
    "pending": 0,
    "failures": 0,
    "start": "2023-02-09T12:46:26.008Z",
    "end": "2023-02-09T12:46:37.184Z",
    "duration": 11176,
    "testsRegistered": 9,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "2600ab8b-701a-4fd3-bd42-5544b5421396",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f8c00447-6651-401d-bd93-8b161b4c1fa7",
          "title": "Auth",
          "fullFile": "D:\\testing2\\API-Testing\\tests\\scenario\\auth.test.js",
          "file": "\\tests\\scenario\\auth.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should succesful authentication with valid data",
              "fullTitle": "Auth Should succesful authentication with valid data",
              "timedOut": false,
              "duration": 1704,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await restfulApi.auth(data.VALID_AUTHENTICATION);          \n\nassert.equal(response.status, 200);\nassert.isString(response.data.token);",
              "err": {},
              "uuid": "55d51b26-2e8a-4783-9bbd-06c393534e7a",
              "parentUUID": "f8c00447-6651-401d-bd93-8b161b4c1fa7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should not succesful authentication with invalid data",
              "fullTitle": "Auth Should not succesful authentication with invalid data",
              "timedOut": false,
              "duration": 1332,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await restfulApi.auth(data.INVALID_AUTHENTICATION);          \n\nassert.equal(response.status, 200);\nassert.isString(response.data.reason)",
              "err": {},
              "uuid": "98aa598f-2624-4a14-9998-bd03f497af67",
              "parentUUID": "f8c00447-6651-401d-bd93-8b161b4c1fa7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "55d51b26-2e8a-4783-9bbd-06c393534e7a",
            "98aa598f-2624-4a14-9998-bd03f497af67"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3036,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "407bdcd0-a812-430b-a96e-c6d098a746f1",
          "title": "Createbooking",
          "fullFile": "D:\\testing2\\API-Testing\\tests\\scenario\\create.booking.js",
          "file": "\\tests\\scenario\\create.booking.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should succesful create booking",
              "fullTitle": "Createbooking Should succesful create booking",
              "timedOut": false,
              "duration": 1027,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await restfulApi.createbooking(data.CREATE_BOOKING);          \nid_data = response.data.bookingid\nassert.equal(response.status, 200);\nassert.isNumber(response.data.bookingid);",
              "err": {},
              "uuid": "730b371c-8c37-4297-a995-3c1ffcc964ab",
              "parentUUID": "407bdcd0-a812-430b-a96e-c6d098a746f1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "730b371c-8c37-4297-a995-3c1ffcc964ab"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1027,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "09d020ce-7c29-41a0-9343-3a3cac688f91",
          "title": "GetAllIdBooking",
          "fullFile": "D:\\testing2\\API-Testing\\tests\\scenario\\get.all-id.booking.js",
          "file": "\\tests\\scenario\\get.all-id.booking.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should succesful get all id booking",
              "fullTitle": "GetAllIdBooking Should succesful get all id booking",
              "timedOut": false,
              "duration": 1874,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await restfulApi.getallid();          \nassert.equal(response.status, 200);",
              "err": {},
              "uuid": "70fbdec9-8e23-451e-a2c7-a49dec82ef00",
              "parentUUID": "09d020ce-7c29-41a0-9343-3a3cac688f91",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "70fbdec9-8e23-451e-a2c7-a49dec82ef00"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1874,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a042b37d-4ff5-4b8c-bbdb-f506b94e9470",
          "title": "getbooking",
          "fullFile": "D:\\testing2\\API-Testing\\tests\\scenario\\get.booking.js",
          "file": "\\tests\\scenario\\get.booking.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should succesfully get list users",
              "fullTitle": "getbooking Should succesfully get list users",
              "timedOut": false,
              "duration": 991,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const param1 = data.userParam['firstname'];\nconst param2 = data.userParam['lastname'];\nconst response = await restfulApi.getbookinguser(param1,param2);\nconsole.log(response.data)\nconsole.log(param1,param2)\nassert.equal(response.status, 200);",
              "err": {},
              "uuid": "597b9ebb-77a0-4e23-9d33-f73d870d7121",
              "parentUUID": "a042b37d-4ff5-4b8c-bbdb-f506b94e9470",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should succesfully get list users by ID",
              "fullTitle": "getbooking Should succesfully get list users by ID",
              "timedOut": false,
              "duration": 989,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const param = getParams(await idBooking());\nconst response = await restfulApi.getbooking(param);\nconsole.log(response.data)\nassert.equal(response.status, 200);",
              "err": {},
              "uuid": "444bcaed-bd80-493a-947b-01eb3efd1e66",
              "parentUUID": "a042b37d-4ff5-4b8c-bbdb-f506b94e9470",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should unsuccesfully get list users",
              "fullTitle": "getbooking Should unsuccesfully get list users",
              "timedOut": false,
              "duration": 1143,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const param = getParams(data.INVALID_ID['id']);\nconst response = await restfulApi.getbooking(param);\nassert.equal(response.status, 404);",
              "err": {},
              "uuid": "2e09b97e-d171-44f5-80bd-797c46b33371",
              "parentUUID": "a042b37d-4ff5-4b8c-bbdb-f506b94e9470",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Successfully filter by checkin and Checkout",
              "fullTitle": "getbooking Successfully filter by checkin and Checkout",
              "timedOut": false,
              "duration": 1108,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const param3 = data.userDate['checkin'];\nconst param4 = data.userDate['checkout'];\nconst response = await restfulApi.getbookingdate(param3,param4)\nassert.equal(response.status, 200);",
              "err": {},
              "uuid": "a431d061-cbe0-4fa6-badf-72f2af5d4304",
              "parentUUID": "a042b37d-4ff5-4b8c-bbdb-f506b94e9470",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "597b9ebb-77a0-4e23-9d33-f73d870d7121",
            "444bcaed-bd80-493a-947b-01eb3efd1e66",
            "2e09b97e-d171-44f5-80bd-797c46b33371",
            "a431d061-cbe0-4fa6-badf-72f2af5d4304"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4231,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "ad39fe79-9b73-4891-82f6-2feb644e78af",
          "title": "Healthcheck",
          "fullFile": "D:\\testing2\\API-Testing\\tests\\scenario\\health.check.js",
          "file": "\\tests\\scenario\\health.check.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should succesfull Help Check",
              "fullTitle": "Healthcheck Should succesfull Help Check",
              "timedOut": false,
              "duration": 976,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await restfulApi.healthcheck();          \nassert.equal(response.status, 201);",
              "err": {},
              "uuid": "1b1b4490-db96-4b85-981d-dcd12a2093a4",
              "parentUUID": "ad39fe79-9b73-4891-82f6-2feb644e78af",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1b1b4490-db96-4b85-981d-dcd12a2093a4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 976,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}